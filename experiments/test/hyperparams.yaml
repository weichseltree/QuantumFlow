resnet_100:
  seed: 0

  dataset_train: &DATASET_TRAIN_100
    class: quantumflow.noninteracting_1d.DensityKineticEnergyDataset
    experiment: snyder_2012
    run_name: recreate_dataset
    N: 1
    dtype: float32
    subtract_von_weizsaecker: False

    features: 
      - density

    targets: 
      - kinetic_energy
      - kinetic_energy_density
      - derivative

  dataset_validate:
    <<: *DATASET_TRAIN_100
    run_name: validate_dataset

  model:
    class: quantumflow.noninteracting_1d.KineticEnergyFunctionalDerivativeModel
    base_model:
      class: quantumflow.noninteracting_1d.ResNet_KineticEnergyDensityFunctional
      l2_regularisation: 0.00025

      blocks: 
        - &RESNET_RESNET_BLOCK_100
          filters: [32, 32]
          kernel_size: [100, 100]
          padding: same
          activation: softplus
          add_input: True

        - <<: *RESNET_RESNET_BLOCK_100

        - <<: *RESNET_RESNET_BLOCK_100

        - &RESNET_FINAL_BLOCK_100
          filters: [1]
          kernel_size: [100]
          padding: same
          activation: null
          add_input: False

  metrics: 
    kinetic_energy: mean_absolute_error
    kinetic_energy_density: mean_absolute_error
    derivative: mean_absolute_error

  loss: 
    kinetic_energy: mean_squared_error
    kinetic_energy_density: mean_squared_error
    derivative: mean_squared_error

  loss_weights:
      kinetic_energy: 0
      kinetic_energy_density: 1.0
      derivative: 1.0

  optimizer: 
    class: quantumflow.utils.Adam
    beta_1: 0.9
    beta_2: 0.999
    epsilon: 1e-07
    amsgrad: False

    clipnorm: 100.0

    learning_rate: 
      class: quantumflow.utils.WarmupExponentialDecay
      initial_learning_rate: 0.0001
      final_learning_rate: 0.0000000001
      decay_rate: 0.9
      decay_steps: 1000 # batches

      cold_steps: 21800 # batches
      warmup_steps: 0 # batches
      cold_factor: 1.0

  fit:
    batch_size: 100
    epochs: 100000
    verbose: 0
    #validation_split: 0.1
    validation_freq: 10000  # epochs
    shuffle: True
    initial_epoch: 0

  checkpoint:
    filename: weights.{epoch:03d}.tf
    save_freq: 2000000 # samples
    save_weights_only: True

  tensorboard: 
    class: quantumflow.utils.CustomTensorBoard
    histogram_freq: 10000 # epochs
    metrics_freq: 100 # epochs
    write_graph: True
    write_images: True
    update_freq: epoch

  save_model: False
  export: True
  export_model: model

resnet_100000:
  
  dataset_train: &DATASET_TRAIN_100000
    <<: *DATASET_TRAIN_100
    run_name: train_dataset
    N: 2
    subtract_von_weizsaecker: True

  dataset_validate:
    <<: *DATASET_TRAIN_100000
    run_name: validate_dataset

  model:
    class: quantumflow.noninteracting_1d.KineticEnergyFunctionalDerivativeModel
    base_model:
      class: quantumflow.noninteracting_1d.ResNet_KineticEnergyDensityFunctional
      l2_regularisation: 0.0000001

      blocks: 
        - <<: *RESNET_RESNET_BLOCK_100
        - <<: *RESNET_RESNET_BLOCK_100
        - <<: *RESNET_RESNET_BLOCK_100
        - <<: *RESNET_FINAL_BLOCK_100

  metrics: 
    kinetic_energy: mean_absolute_error
    kinetic_energy_density: mean_absolute_error
    derivative: mean_absolute_error

  loss: 
    kinetic_energy: mean_squared_error
    kinetic_energy_density: mean_squared_error
    derivative: mean_squared_error

  loss_weights:
      kinetic_energy: 0
      kinetic_energy_density: 1.0
      derivative: 1.0

  optimizer: 
    class: quantumflow.utils.Adam
    beta_1: 0.9
    beta_2: 0.999
    epsilon: 1e-07
    amsgrad: False

    clipnorm: 100.0

    learning_rate: 
      class: quantumflow.utils.WarmupExponentialDecay
      initial_learning_rate: 0.0001
      final_learning_rate: 0.0000000001
      decay_rate: 0.9
      decay_steps: 1000 # batches

      cold_steps: 21800 # batches
      warmup_steps: 0 # batches
      cold_factor: 1.0

  fit:
    batch_size: 100
    epochs: 100000
    verbose: 0
    #validation_split: 0.1
    validation_freq: 10000  # epochs
    shuffle: True
    initial_epoch: 0

  checkpoint:
    filename: weights.{epoch:03d}.tf
    save_freq: 2000000 # samples
    save_weights_only: True

  tensorboard: 
    class: quantumflow.utils.CustomTensorBoard
    histogram_freq: 10000 # epochs
    metrics_freq: 100 # epochs
    write_graph: True
    write_images: True
    update_freq: epoch

  save_model: False
  export: True
  export_model: model